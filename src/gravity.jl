using StaticArrays

"""
    gravity!(q, G)

Calculate the gravity term of Kinova Gen3 robot for a given configuration.

This function reduces the number of dynamic memory allocation.

# Arguments
- `q::SVector{7, Float64}`: the joint angles of the robot [rad]
- `G::MVector{7, Float64}`: the gravity term of the robot []

# Examples
```jldoctest
julia> q = SVector(0.0, π / 6, π / 3, π / 2, 0.0, π / 4, 0.0)
julia> G = zeros(MVector{7})
julia> gravity!(q, G)
7-element MVector{7, Float64} with indices SOneTo(7):
   1.7862417274472353e-16
 -10.576350989174017
   3.0274799819651212
  -5.734529044767631
   0.2514842083025938
  -0.42307721718230645
  -0.024979720551009294
```
"""
function gravity!(q::SVector{7, Float64}, G::MVector{7, Float64})
    # Gravity acceleration constant [m/s^2]
    g = 9.80665

    q1 = q[1]
    q2 = q[2]
    q3 = q[3]
    q4 = q[4]
    q5 = q[5]
    q6 = q[6]
    q7 = q[7]

    x0 = cos(q3)
    x1 = sin(q2)
    x2 = x0 .* x1
    x3 = cos(q2)
    x4 = 0.017767125 * x3
    x5 = sin(q3)
    x6 = x1 .* x5
    x7 = 1.1636 * x3
    x8 = sin(q4)
    x9 = x3 .* x8
    x10 = cos(q4)
    x11 = x1 .* x10
    x12 = x10 .* x3
    x13 = x2 .* x8
    x14 = -x12 + x13
    x15 = x0 .* x10
    x16 = x1 .* x15
    x17 = 1.8e-5 * x0
    x18 = 0.9302 * x6
    x19 = 0.9302 * x14
    x20 = -x16 - x9
    x21 = 0.9302 * x20
    x22 = 1.8568 * x20
    x23 = cos(q5)
    x24 = sin(q5)
    x25 = x24 .* x5
    x26 = x0 .* x10 .* x23 - x25
    x27 = 0.00017505 * x1
    x28 = 1.1787 * x14
    x29 = 0.10593 * x23
    x30 = 0.10593 * x1
    x31 = x20 .* x24
    x32 = -x1 .* x23 .* x5 + x31
    x33 = -x32
    x34 = 1.1787 * x33
    x35 = 0.063883 * x23
    x36 = 0.063883 * x1
    x37 = 0.6781 * x33
    x38 = -0.10593 * x24 .* x3 .* x8
    x39 = x23 .* x5
    x40 = x15 .* x24 + x39
    x41 = -x40
    x42 = x1 .* x25
    x43 = x20 .* x23
    x44 = x42 + x43
    x45 = 1.1787 * x44
    x46 = 0.6781 * x44
    x47 = 0.009432 * x23
    x48 = 0.6781 * x14
    x49 = sin(q6)
    x50 = x10 .* x49
    x51 = cos(q6)
    x52 = x51 .* x8
    x53 = x23 .* x52
    x54 = x3 .* (x50 + x53)
    x55 = x49 .* x8
    x56 = x10 .* x23 .* x51 - x55
    x57 = x0 .* x56 - x25 .* x51
    x58 = 0.5006 * x32
    x59 = x44 .* x49
    x60 = x14 .* x51 - x59
    x61 = 0.5006 * x60
    x62 = x1 .* x57
    x63 = 0.6781 * x60
    x64 = x23 .* x55
    x65 = x10 .* x51 - x64
    x66 = x3 .* x65
    x67 = -x23 .* x50 - x52
    x68 = x0 .* x67 + x25 .* x49
    x69 = x1 .* x68
    x70 = x14 .* x49
    x71 = x44 .* x51
    x72 = x70 + x71
    x73 = 0.6781 * x72
    x74 = 0.5006 * x72
    x75 = 0.6781 * x32
    x76 = cos(q7)
    x77 = x50 .* x76
    x78 = sin(q7)
    x79 = x24 .* x78
    x80 = x23 .* x51 .* x76 - x79
    x81 = x8 .* x80
    x82 = x3 .* (x77 + x81)
    x83 = x23 .* x78
    x84 = x24 .* x76
    x85 = x51 .* x84
    x86 = x83 + x85
    x87 = x10 .* x80 - x55 .* x76
    x88 = x0 .* x87 - x5 .* x86
    x89 = x32 .* x76
    x90 = x72 .* x78
    x91 = -x89 - x90
    x92 = 0.5006 * x91
    x93 = x50 .* x78
    x94 = -x51 .* x83 - x84
    x95 = x8 .* x94
    x96 = -x93 + x95
    x97 = x51 .* x79
    x98 = x23 .* x76 - x97
    x99 = x10 .* x94 + x55 .* x78
    x100 = x0 .* x99 - x5 .* x98
    x101 = x32 .* x78
    x102 = x72 .* x76
    x103 = -x101 + x102
    x104 = 0.5006 * x103
    x105 = x5 .^ 2
    x106 = 0.7235081912 * x1
    x107 = x5 .* x8
    x108 = x10 .* x5
    x109 = x0 .* x24
    x110 = 0.00017505 * x109
    x111 = 0.00017505 * x10
    x112 = 0.10593 * x109
    x113 = 0.10593 * x10
    x114 = 0.009432 * x24
    x115 = 1.0e-6 * x23
    x116 = 1.0e-6 * x10
    x117 = x116 .* x25
    x118 = 0.009432 * x10
    x119 = x113 .* x25
    x120 = x10 .* x25
    x121 = x5 .* x56
    x122 = x5 .* x67
    x123 = 0.00965 * x109
    x124 = 0.045483 * x23
    x125 = x0 .* x86
    x126 = x0 .* x98
    x127 = x5 .* x87
    x128 = x5 .* x99
    x129 = 0.000281 * x49
    x130 = 0.011402 * x49
    x131 = x14 .* x8
    x132 = x24 .* x8
    x133 = 1.0e-6 * x132
    x134 = 0.10593 * x132
    x135 = x10 .* x51
    x136 = x24 .* x51
    x137 = 0.053028558 * x32
    x138 = x24 .* x49
    x139 = x23 .* x76
    x140 = 0.000281 * x51
    x141 = 0.011402 * x51
    x142 = 0.029798 * x49

    G[1] = g .* (0.58632906 * x0 .* x1 .^ 2 .* x5 + x104 .* (-0.029798 * x1 .* x100 + 0.011402 * x1 .* x68 + 0.011402 * x3 .* x65 - 0.029798 * x3 .* x96) + 1.8568 * x14 .* (0.006375 * x16 + 0.006375 * x9) - x18 .* (-0.075478 * x0 .* x11 - x1 .* x17 .* x8 + 1.8e-5 * x10 .* x3 - 0.075478 * x9) + x19 .* (0.015006 * x16 - 1.8e-5 * x6 + 0.015006 * x9) - x2 .* x4 - 2.787 * x2 .* (-0.006375 * x3 + 0.21038 * x6) - 1.1636 * x2 .* (0.006641 * x3 + 0.117892 * x6) + x21 .* (-0.015006 * x12 + 0.015006 * x13 + 0.075478 * x6) + x22 .* (-0.006375 * x12 + 0.006375 * x13 + 0.20843 * x6) + x28 .* (0.00017505 * x23 .* x9 + x26 .* x27) + x34 .* (x26 .* x30 + x29 .* x9) + x37 .* (1.0e-6 * x12 - 1.0e-6 * x13 + x26 .* x36 + x35 .* x9) + x45 .* (0.00017505 * x0 .* x1 .* x8 - 0.00017505 * x12 - x30 .* x41 - x38) + x46 .* (0.009432 * x10 .* x3 - 0.009432 * x13 + 0.063883 * x24 .* x3 .* x8 - x36 .* x41) + x48 .* (-0.009432 * x1 .* x26 - 1.0e-6 * x1 .* x41 + 1.0e-6 * x24 .* x3 .* x8 - x47 .* x9) + x58 .* (-x30 .* x57 - 0.10593 * x54) + 1.1636 * x6 .* (0.117892 * x2 - 4.4e-5 * x3) - 1.8568 * x6 .* (-0.20843 * x0 .* x11 - 0.20843 * x9) + x61 .* (x27 .* x57 + 0.00017505 * x54) + x61 .* (0.000281 * x1 .* x100 - 0.011402 * x1 .* x88 + 0.000281 * x3 .* x96 - 0.011402 * x82) + x63 .* (1.0e-6 * x1 .* x40 + 1.0e-6 * x24 .* x9 + 0.00965 * x54 + 0.00965 * x62) - x7 .* (-0.006641 * x2 - 4.4e-5 * x6) + x73 .* (0.045483 * x1 .* x40 + 0.045483 * x24 .* x3 .* x8 - 0.00965 * x66 - 0.00965 * x69) + x74 .* (0.10593 * x1 .* x40 - x27 .* x68 - x38 - 0.00017505 * x66) + x75 .* (-0.045483 * x54 - 0.045483 * x62 - 1.0e-6 * x66 - 1.0e-6 * x69) + x92 .* (0.029798 * x1 .* x88 - 0.000281 * x66 - 0.000281 * x69 + 0.029798 * x82))
    G[2] = g .* (-x0 .^ 2 .* x106 - 0.946998516 * x1 + x104 .* (x109 .* x130 - 0.011402 * x122 + 0.029798 * x126 + 0.029798 * x128) - x105 .* x106 - 0.387012824 * x105 .* x11 - 0.0118371 * x108 .* x14 - x18 .* (1.8e-5 * x107 + 0.075478 * x108) + x19 .* (-0.015006 * x108 - x17) + x21 .* (0.075478 * x0 - 0.015006 * x107) + x22 .* (0.20843 * x0 - 0.006375 * x107) + x28 .* (-x110 - x111 .* x39) + 5.11984e-5 * x3 + x34 .* (-x112 - x113 .* x39) + x37 .* (-0.063883 * x10 .* x39 - 0.063883 * x109 + 1.0e-6 * x5 .* x8) + x4 .* x5 + x45 .* (0.10593 * x0 .* x23 - 0.00017505 * x107 - x119) + x46 .* (x0 .* x35 + 0.009432 * x107 - 0.063883 * x120) + x48 .* (x0 .* x114 + x0 .* x115 - x117 + x118 .* x39) + x58 .* (x112 .* x51 + 0.10593 * x121) + x61 .* (-x110 .* x51 - 0.00017505 * x121) + x61 .* (0.011402 * x125 - 0.000281 * x126 + 0.011402 * x127 - 0.000281 * x128) + x63 .* (1.0e-6 * x0 .* x23 - x117 - 0.00965 * x121 - x123 .* x51) - x7 .* (-4.4e-5 * x0 + 0.006641 * x5) + x73 .* (x0 .* x124 - 0.045483 * x120 + 0.00965 * x122 - x123 .* x49) + x74 .* (x0 .* x29 - x110 .* x49 - x119 + 0.00017505 * x122) + x75 .* (-1.0e-6 * x109 .* x49 + 0.045483 * x109 .* x51 + 0.045483 * x121 + 1.0e-6 * x122) + x92 .* (-x109 .* x129 - 0.029798 * x125 - 0.029798 * x127 + 0.000281 * x5 .* x67))
    G[3] = g .* (-0.0257956812 * x10 .* x20 + x104 .* (0.029798 * x10 .* x49 .* x78 + 0.011402 * x10 .* x51 - 0.011402 * x64 - 0.029798 * x95) + 0.000206331435 * x131 .* x23 + 0.0257956812 * x131 - x18 .* (1.8e-5 * x10 - 0.075478 * x8) + 0.0100396574 * x2 + 0.124859691 * x23 .* x33 .* x8 + x37 .* (x116 + x35 .* x8) + x45 .* (-x111 + x134) + x46 .* (x118 + 0.063883 * x132) + x48 .* (x133 - x47 .* x8) + x58 .* (-x29 .* x52 - 0.10593 * x50) + 0.387012824 * x6 .* x8 - 5.11984e-5 * x6 + x61 .* (0.00017505 * x50 + 0.00017505 * x53) + x61 .* (-0.011402 * x77 + 0.000281 * x8 .* x94 - 0.011402 * x81 - 0.000281 * x93) + x63 .* (x133 + 0.00965 * x50 + 0.00965 * x53) + x73 .* (0.045483 * x132 - 0.00965 * x135 + 0.00965 * x64) + x74 .* (x134 - 0.00017505 * x135 + 0.00017505 * x64) + x75 .* (-x124 .* x52 - 1.0e-6 * x135 + 1.0e-6 * x23 .* x49 .* x8 - 0.045483 * x50) + x92 .* (-0.000281 * x135 + 0.000281 * x64 + 0.029798 * x77 + 0.029798 * x81))
    G[4] = g .* (x104 .* (0.011402 * x138 + 0.029798 * x139 - 0.029798 * x97) + 1.67436e-5 * x12 - 1.67436e-5 * x13 + x136 .* x137 - 8.763003e-5 * x136 .* x60 - 0.000206331435 * x14 .* x24 - 0.4572224596 * x16 + 0.1681787533 * x23 .* x44 - 0.1681787533 * x24 .* x33 + x48 .* (x114 + x115) + x61 .* (-0.000281 * x139 + x140 .* x79 + x141 .* x84 + 0.011402 * x83) + x63 .* (-0.00965 * x136 + 1.0e-6 * x23) + x73 .* (-0.00965 * x138 + 0.045483 * x23) + x74 .* (-0.00017505 * x138 + 0.10593 * x23) + x75 .* (-1.0e-6 * x138 + 0.045483 * x24 .* x51) - 0.4572224596 * x9 + x92 .* (-0.000281 * x138 - 0.029798 * x83 - 0.029798 * x85))
    G[5] = g .* (6.781e-7 * x1 .* x39 + x104 .* (x141 + x142 .* x78) - x137 .* x49 - 6.781e-7 * x31 + 0.006189507765 * x42 + 0.006189507765 * x43 + 0.00663129503 * x49 .* x60 - 0.00663129503 * x51 .* x72 + x61 .* (-x129 .* x78 - x130 .* x76) + x75 .* (-0.045483 * x49 - 1.0e-6 * x51) + x92 .* (-x140 + x142 .* x76))
    G[6] = g .* (0.0149168788 * x103 .* x76 + 6.781e-7 * x14 .* x51 - 6.781e-7 * x59 + x61 .* (-0.000281 * x76 + 0.011402 * x78) + 0.0838705803 * x70 + 0.0838705803 * x71 - 0.0149168788 * x78 .* x91)
    G[7] = g .* (-0.0057078412 * x101 + 0.0057078412 * x102 + 0.0001406686 * x89 + 0.0001406686 * x90)

    return (G)
end

"""
    gravity(q)

Calculate the gravity term of Kinova Gen3 robot for a given configuration.

# Arguments
- `q::SVector{7, Float64}`: the joint angles of the robot [rad]

# Examples
```jldoctest
julia> q = SVector(0.0, π / 6, π / 3, π / 2, 0.0, π / 4, 0.0)
julia> gravity(q)
7-element MVector{7, Float64} with indices SOneTo(7):
   1.7862417274472353e-16
 -10.576350989174017
   3.0274799819651212
  -5.734529044767631
   0.2514842083025938
  -0.42307721718230645
  -0.024979720551009294
```
"""
function gravity(q::SVector{7, Float64})
    G = zeros(MVector{7})

    gravity!(q, G)

    return G
end
